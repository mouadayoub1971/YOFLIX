import { TechnosList } from '@constants';
import { Project, ProjectContext, ProjectType } from '@models';

export const sgtsProject: Project = {
  title: 'simple-graphql-to-typescript',
  picture:
    'https://firebasestorage.googleapis.com/v0/b/vicflix-2fbe0.appspot.com/o/Pictures%2FProjects%2Fsgts%2Fsgts_placeholder.png?alt=media&token=bc2459c1-a215-4abc-af51-86e2ab54812b',
  placeholder:
    'https://firebasestorage.googleapis.com/v0/b/vicflix-2fbe0.appspot.com/o/Pictures%2FProjects%2Fsgts%2Fsgts_placeholder.png?alt=media&token=bc2459c1-a215-4abc-af51-86e2ab54812b',
  slogan: 'üöÄ üîÑ Simple Typescript interface generator from a GraphQL api schemas or URL',
  description: `Ce projet m'est venu √† l'id√©e apr√®s avoir r√©alis√© 2 projets avec GraphQL et Typescript (Bigup & Peppy).
    Je passais beaucoup de temps √† √©crire √† la main mes interfaces Typescript correspondant au sch√©ma GraphQL de notre API.
    Apr√®s mes recherches de solutions, aucune de me convenait (Apollo codegen, Graphql codegen, GraphQl Zeus...).
    Je d√©cidai donc de r√©aliser ma propre solution pour g√©n√©rer mes interfaces.

    Le projet a commenc√© par un simple outil CLI qui me g√©n√©rait un fichier d'interfaces simples en lui pr√©cisant l'url de l'API GraphQL et un chemin de sortie.
    Il a beaucoup √©volu√© au fur et √† mesure de mes projets.
    
    Par exemple au cours de mon projet Cr√®ches Lib', je remarquais que je perdais beaucoup du temps √† √©crire toutes mes queries et mutations GraphQL, et le refactoring √©tait compliqu√© durant le temps de d√©velopement en raison de renommage, changements de types etc...
    j'ai donc am√©lior√© cette librairie en ajoutant la g√©n√©ration automatique et typ√©e de queries et mutations.
    
    Ce projet m'a beaucoup apport√© d'exp√©rience en Node, faire un CLI, typescript et GraphQL.
    Je fais √©voluer continuellement les fonctionnalit√©s, souvent gr√¢ce au besoin des projets en cours.`,

  logo: 'sgts.svg',
  videos: [],
  year: 2019,
  links: [
    {
      title: 'Github homepage',
      link: 'https://github.com/victorgarciaesgi/simple-graphql-to-typescript',
    },
    {
      title: 'Documentation',
      link: 'https://sgts.netlify.app/',
    },
  ],
  badges: [
    {
      img: 'https://img.shields.io/npm/v/simple-graphql-to-typescript.svg',
      link: 'https://www.npmjs.com/package/simple-graphql-to-typescript',
    },
    {
      img: 'https://img.shields.io/npm/dm/simple-graphql-to-typescript.svg',
      link: 'https://www.npmjs.com/package/simple-graphql-to-typescript',
    },
    {
      img: 'https://img.shields.io/npm/dt/simple-graphql-to-typescript.svg',
      link: 'https://www.npmjs.com/package/simple-graphql-to-typescript',
    },
    {
      img: 'https://img.shields.io/github/workflow/status/victorgarciaesgi/simple-graphql-to-typescript/Node.js%20CI',
    },
    {
      img: 'https://img.shields.io/npm/l/simple-graphql-to-typescript.svg',
    },
  ],
  type: [ProjectType.Library],
  id: 'MNJ9OK3jn',
  technos: [TechnosList.Typescript, TechnosList.GraphQL, TechnosList.Jest, TechnosList.VuePress],
  context: ProjectContext.Personal,
};
